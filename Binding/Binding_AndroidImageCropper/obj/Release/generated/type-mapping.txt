com/theartofdev/edmodo/cropper/BuildConfig = Com.Theartofdev.Edmodo.Cropper.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  LIBRARY_PACKAGE_NAME = LibraryPackageName
com/theartofdev/edmodo/cropper/CropImage = Com.Theartofdev.Edmodo.Cropper.CropImage
  CAMERA_CAPTURE_PERMISSIONS_REQUEST_CODE = CameraCapturePermissionsRequestCode
  CROP_IMAGE_ACTIVITY_REQUEST_CODE = CropImageActivityRequestCode
  CROP_IMAGE_ACTIVITY_RESULT_ERROR_CODE = CropImageActivityResultErrorCode
  CROP_IMAGE_EXTRA_BUNDLE = CropImageExtraBundle
  CROP_IMAGE_EXTRA_OPTIONS = CropImageExtraOptions
  CROP_IMAGE_EXTRA_RESULT = CropImageExtraResult
  CROP_IMAGE_EXTRA_SOURCE = CropImageExtraSource
  PICK_IMAGE_CHOOSER_REQUEST_CODE = PickImageChooserRequestCode
  PICK_IMAGE_PERMISSIONS_REQUEST_CODE = PickImagePermissionsRequestCode
  activity()Lcom/theartofdev/edmodo/cropper/CropImage$ActivityBuilder; = Activity()
  activity(Landroid/net/Uri;)Lcom/theartofdev/edmodo/cropper/CropImage$ActivityBuilder; = Activity(Android.Net.Uri)
  getActivityResult(Landroid/content/Intent;)Lcom/theartofdev/edmodo/cropper/CropImage$ActivityResult; = GetActivityResult(Android.Content.Intent)
  getCameraIntent(Landroid/content/Context;Landroid/net/Uri;)Landroid/content/Intent; = GetCameraIntent(Android.Content.Context, Android.Net.Uri)
  getCameraIntents(Landroid/content/Context;Landroid/content/pm/PackageManager;)Ljava/util/List; = GetCameraIntents(Android.Content.Context, Android.Content.PM.PackageManager)
  getCaptureImageOutputUri(Landroid/content/Context;)Landroid/net/Uri; = GetCaptureImageOutputUri(Android.Content.Context)
  getGalleryIntents(Landroid/content/pm/PackageManager;Ljava/lang/String;Z)Ljava/util/List; = GetGalleryIntents(Android.Content.PM.PackageManager, string, bool)
  getPickImageChooserIntent(Landroid/content/Context;)Landroid/content/Intent; = GetPickImageChooserIntent(Android.Content.Context)
  getPickImageChooserIntent(Landroid/content/Context;Ljava/lang/CharSequence;ZZ)Landroid/content/Intent; = GetPickImageChooserIntent(Android.Content.Context, Java.Lang.ICharSequence, bool, bool)
  getPickImageResultUri(Landroid/content/Context;Landroid/content/Intent;)Landroid/net/Uri; = GetPickImageResultUri(Android.Content.Context, Android.Content.Intent)
  hasPermissionInManifest(Landroid/content/Context;Ljava/lang/String;)Z = HasPermissionInManifest(Android.Content.Context, string)
  isExplicitCameraPermissionRequired(Landroid/content/Context;)Z = IsExplicitCameraPermissionRequired(Android.Content.Context)
  isReadExternalStoragePermissionsRequired(Landroid/content/Context;Landroid/net/Uri;)Z = IsReadExternalStoragePermissionsRequired(Android.Content.Context, Android.Net.Uri)
  isUriRequiresPermissions(Landroid/content/Context;Landroid/net/Uri;)Z = IsUriRequiresPermissions(Android.Content.Context, Android.Net.Uri)
  startPickImageActivity(Landroid/app/Activity;)V = StartPickImageActivity(Android.App.Activity)
  toOvalBitmap(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap; = ToOvalBitmap(Android.Graphics.Bitmap)
com/theartofdev/edmodo/cropper/CropImageOptions = Com.Theartofdev.Edmodo.Cropper.CropImageOptions
  <init>()V = .ctor()
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  activityMenuIconColor = ActivityMenuIconColor
  activityTitle = ActivityTitle
  allowCounterRotation = AllowCounterRotation
  allowFlipping = AllowFlipping
  allowRotation = AllowRotation
  aspectRatioX = AspectRatioX
  aspectRatioY = AspectRatioY
  autoZoomEnabled = AutoZoomEnabled
  backgroundColor = BackgroundColor
  borderCornerColor = BorderCornerColor
  borderCornerLength = BorderCornerLength
  borderCornerOffset = BorderCornerOffset
  borderCornerThickness = BorderCornerThickness
  borderLineColor = BorderLineColor
  borderLineThickness = BorderLineThickness
  CREATOR = Creator
  cropMenuCropButtonIcon = CropMenuCropButtonIcon
  cropMenuCropButtonTitle = CropMenuCropButtonTitle
  cropShape = CropShape
  fixAspectRatio = FixAspectRatio
  flipHorizontally = FlipHorizontally
  flipVertically = FlipVertically
  guidelines = Guidelines
  guidelinesColor = GuidelinesColor
  guidelinesThickness = GuidelinesThickness
  initialCropWindowPaddingRatio = InitialCropWindowPaddingRatio
  initialCropWindowRectangle = InitialCropWindowRectangle
  initialRotation = InitialRotation
  maxCropResultHeight = MaxCropResultHeight
  maxCropResultWidth = MaxCropResultWidth
  maxZoom = MaxZoom
  minCropResultHeight = MinCropResultHeight
  minCropResultWidth = MinCropResultWidth
  minCropWindowHeight = MinCropWindowHeight
  minCropWindowWidth = MinCropWindowWidth
  multiTouchEnabled = MultiTouchEnabled
  noOutputImage = NoOutputImage
  outputCompressFormat = OutputCompressFormat
  outputCompressQuality = OutputCompressQuality
  outputRequestHeight = OutputRequestHeight
  outputRequestSizeOptions = OutputRequestSizeOptions
  outputRequestWidth = OutputRequestWidth
  outputUri = OutputUri
  rotationDegrees = RotationDegrees
  scaleType = ScaleType
  showCropOverlay = ShowCropOverlay
  showProgressBar = ShowProgressBar
  snapRadius = SnapRadius
  touchRadius = TouchRadius
  describeContents()I = DescribeContents()
  validate()V = Validate()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/theartofdev/edmodo/cropper/CropImageView = Com.Theartofdev.Edmodo.Cropper.CropImageView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  getAspectRatio()Landroid/util/Pair; = AspectRatio
  isAutoZoomEnabled()Z = AutoZoomEnabled
  setAutoZoomEnabled(Z)V = AutoZoomEnabled
  getCroppedImage()Landroid/graphics/Bitmap; = CroppedImage
  getCropRect()Landroid/graphics/Rect; = CropRect
  setCropRect(Landroid/graphics/Rect;)V = CropRect
  getCropWindowRect()Landroid/graphics/RectF; = CropWindowRect
  isFlippedHorizontally()Z = FlippedHorizontally
  setFlippedHorizontally(Z)V = FlippedHorizontally
  isFlippedVertically()Z = FlippedVertically
  setFlippedVertically(Z)V = FlippedVertically
  getImageResource()I = ImageResource
  setImageResource(I)V = ImageResource
  getImageUri()Landroid/net/Uri; = ImageUri
  isFixAspectRatio()Z = IsFixAspectRatio
  getMaxZoom()I = MaxZoom
  setMaxZoom(I)V = MaxZoom
  getRotatedDegrees()I = RotatedDegrees
  setRotatedDegrees(I)V = RotatedDegrees
  isSaveBitmapToInstanceState()Z = SaveBitmapToInstanceState
  setSaveBitmapToInstanceState(Z)V = SaveBitmapToInstanceState
  isShowCropOverlay()Z = ShowCropOverlay
  setShowCropOverlay(Z)V = ShowCropOverlay
  isShowProgressBar()Z = ShowProgressBar
  setShowProgressBar(Z)V = ShowProgressBar
  getWholeImageRect()Landroid/graphics/Rect; = WholeImageRect
  clearAspectRatio()V = ClearAspectRatio()
  clearImage()V = ClearImage()
  flipImageHorizontally()V = FlipImageHorizontally()
  flipImageVertically()V = FlipImageVertically()
  getCroppedImage(II)Landroid/graphics/Bitmap; = GetCroppedImage(int, int)
  getCroppedImage(IILcom/theartofdev/edmodo/cropper/CropImageView$RequestSizeOptions;)Landroid/graphics/Bitmap; = GetCroppedImage(int, int, Com.Theartofdev.Edmodo.Cropper.CropImageView.RequestSizeOptions)
  getCroppedImageAsync()V = GetCroppedImageAsync()
  getCroppedImageAsync(II)V = GetCroppedImageAsync(int, int)
  getCroppedImageAsync(IILcom/theartofdev/edmodo/cropper/CropImageView$RequestSizeOptions;)V = GetCroppedImageAsync(int, int, Com.Theartofdev.Edmodo.Cropper.CropImageView.RequestSizeOptions)
  getCropPoints()[F = GetCropPoints()
  getCropShape()Lcom/theartofdev/edmodo/cropper/CropImageView$CropShape; = GetCropShape()
  getGuidelines()Lcom/theartofdev/edmodo/cropper/CropImageView$Guidelines; = GetGuidelines()
  getScaleType()Lcom/theartofdev/edmodo/cropper/CropImageView$ScaleType; = GetScaleType()
  onRestoreInstanceState(Landroid/os/Parcelable;)V = OnRestoreInstanceState(Android.OS.IParcelable)
  onSaveInstanceState()Landroid/os/Parcelable; = OnSaveInstanceState()
  resetCropRect()V = ResetCropRect()
  rotateImage(I)V = RotateImage(int)
  saveCroppedImageAsync(Landroid/net/Uri;)V = SaveCroppedImageAsync(Android.Net.Uri)
  saveCroppedImageAsync(Landroid/net/Uri;Landroid/graphics/Bitmap$CompressFormat;I)V = SaveCroppedImageAsync(Android.Net.Uri, Android.Graphics.Bitmap.CompressFormat, int)
  saveCroppedImageAsync(Landroid/net/Uri;Landroid/graphics/Bitmap$CompressFormat;III)V = SaveCroppedImageAsync(Android.Net.Uri, Android.Graphics.Bitmap.CompressFormat, int, int, int)
  saveCroppedImageAsync(Landroid/net/Uri;Landroid/graphics/Bitmap$CompressFormat;IIILcom/theartofdev/edmodo/cropper/CropImageView$RequestSizeOptions;)V = SaveCroppedImageAsync(Android.Net.Uri, Android.Graphics.Bitmap.CompressFormat, int, int, int, Com.Theartofdev.Edmodo.Cropper.CropImageView.RequestSizeOptions)
  setAspectRatio(II)V = SetAspectRatio(int, int)
  setCropShape(Lcom/theartofdev/edmodo/cropper/CropImageView$CropShape;)V = SetCropShape(Com.Theartofdev.Edmodo.Cropper.CropImageView.CropShape)
  setFixedAspectRatio(Z)V = SetFixedAspectRatio(bool)
  setGuidelines(Lcom/theartofdev/edmodo/cropper/CropImageView$Guidelines;)V = SetGuidelines(Com.Theartofdev.Edmodo.Cropper.CropImageView.Guidelines)
  setImageBitmap(Landroid/graphics/Bitmap;)V = SetImageBitmap(Android.Graphics.Bitmap)
  setImageBitmap(Landroid/graphics/Bitmap;Landroidx/exifinterface/media/ExifInterface;)V = SetImageBitmap(Android.Graphics.Bitmap, AndroidX.ExifInterface.Media.ExifInterface)
  setImageUriAsync(Landroid/net/Uri;)V = SetImageUriAsync(Android.Net.Uri)
  setMaxCropResultSize(II)V = SetMaxCropResultSize(int, int)
  setMinCropResultSize(II)V = SetMinCropResultSize(int, int)
  setMultiTouchEnabled(Z)V = SetMultiTouchEnabled(bool)
  setOnCropImageCompleteListener(Lcom/theartofdev/edmodo/cropper/CropImageView$OnCropImageCompleteListener;)V = SetOnCropImageCompleteListener(Com.Theartofdev.Edmodo.Cropper.CropImageView.IOnCropImageCompleteListener)
  setOnCropWindowChangedListener(Lcom/theartofdev/edmodo/cropper/CropImageView$OnSetCropWindowChangeListener;)V = SetOnCropWindowChangedListener(Com.Theartofdev.Edmodo.Cropper.CropImageView.IOnSetCropWindowChangeListener)
  setOnSetCropOverlayMovedListener(Lcom/theartofdev/edmodo/cropper/CropImageView$OnSetCropOverlayMovedListener;)V = SetOnSetCropOverlayMovedListener(Com.Theartofdev.Edmodo.Cropper.CropImageView.IOnSetCropOverlayMovedListener)
  setOnSetCropOverlayReleasedListener(Lcom/theartofdev/edmodo/cropper/CropImageView$OnSetCropOverlayReleasedListener;)V = SetOnSetCropOverlayReleasedListener(Com.Theartofdev.Edmodo.Cropper.CropImageView.IOnSetCropOverlayReleasedListener)
  setOnSetImageUriCompleteListener(Lcom/theartofdev/edmodo/cropper/CropImageView$OnSetImageUriCompleteListener;)V = SetOnSetImageUriCompleteListener(Com.Theartofdev.Edmodo.Cropper.CropImageView.IOnSetImageUriCompleteListener)
  setScaleType(Lcom/theartofdev/edmodo/cropper/CropImageView$ScaleType;)V = SetScaleType(Com.Theartofdev.Edmodo.Cropper.CropImageView.ScaleType)
  setSnapRadius(F)V = SetSnapRadius(float)
  startCropWorkerTask(IILcom/theartofdev/edmodo/cropper/CropImageView$RequestSizeOptions;Landroid/net/Uri;Landroid/graphics/Bitmap$CompressFormat;I)V = StartCropWorkerTask(int, int, Com.Theartofdev.Edmodo.Cropper.CropImageView.RequestSizeOptions, Android.Net.Uri, Android.Graphics.Bitmap.CompressFormat, int)
com/theartofdev/edmodo/cropper/CropOverlayView = Com.Theartofdev.Edmodo.Cropper.CropOverlayView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  getAspectRatioX()I = AspectRatioX
  setAspectRatioX(I)V = AspectRatioX
  getAspectRatioY()I = AspectRatioY
  setAspectRatioY(I)V = AspectRatioY
  getCropShape()Lcom/theartofdev/edmodo/cropper/CropImageView$CropShape; = CropShape
  setCropShape(Lcom/theartofdev/edmodo/cropper/CropImageView$CropShape;)V = CropShape
  getCropWindowRect()Landroid/graphics/RectF; = CropWindowRect
  setCropWindowRect(Landroid/graphics/RectF;)V = CropWindowRect
  getGuidelines()Lcom/theartofdev/edmodo/cropper/CropImageView$Guidelines; = Guidelines
  setGuidelines(Lcom/theartofdev/edmodo/cropper/CropImageView$Guidelines;)V = Guidelines
  getInitialCropWindowRect()Landroid/graphics/Rect; = InitialCropWindowRect
  setInitialCropWindowRect(Landroid/graphics/Rect;)V = InitialCropWindowRect
  isFixAspectRatio()Z = IsFixAspectRatio
  fixCurrentCropWindowRect()V = FixCurrentCropWindowRect()
  resetCropOverlayView()V = ResetCropOverlayView()
  resetCropWindowRect()V = ResetCropWindowRect()
  setBounds([FII)V = SetBounds(float[], int, int)
  setCropWindowChangeListener(Lcom/theartofdev/edmodo/cropper/CropOverlayView$CropWindowChangeListener;)V = SetCropWindowChangeListener(Com.Theartofdev.Edmodo.Cropper.CropOverlayView.ICropWindowChangeListener)
  setCropWindowLimits(FFFF)V = SetCropWindowLimits(float, float, float, float)
  setFixedAspectRatio(Z)V = SetFixedAspectRatio(bool)
  setInitialAttributeValues(Lcom/theartofdev/edmodo/cropper/CropImageOptions;)V = SetInitialAttributeValues(Com.Theartofdev.Edmodo.Cropper.CropImageOptions)
  setMaxCropResultSize(II)V = SetMaxCropResultSize(int, int)
  setMinCropResultSize(II)V = SetMinCropResultSize(int, int)
  setMultiTouchEnabled(Z)Z = SetMultiTouchEnabled(bool)
  setSnapRadius(F)V = SetSnapRadius(float)
